<%= form_with(model: item) do |form| %>
  <% if item.errors.any? %>
    <div style="color: red">
      <h2><%= pluralize(item.errors.count, "error") %> prohibited this item from being saved:</h2>

      <ul>
        <% item.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div>
    <%= form.label :name, style: "display: block" %>
    <%= form.text_field :name %>
  </div>

  <div>
    <%= form.label :source_url, style: "display: block" %>
    <%= form.text_field :source_url %>
  </div>

  <div>
    <%= form.label :tag_list, 'tags', style: "display: block" %>
    <%= form.text_field :tag_list, value: form.object.tag_list.join(',') %>
  </div>

  <div>
    <%= form.label :description, style: "display: block" %>
    <%= form.text_area :description %>
  </div>

  <div>
    <%= form.label :parent_id, style: "display: block" %>
    <% parent_options = nested_set_options(Item, item) do |i|
        "#{'â€“' * i.level} #{i.name}"
       end
    %>
    <%= form.select :parent_id, parent_options, include_blank: 'Set as root' %>
  </div>

  <div>
    <%= form.submit %>
  </div>
<% end %>

<%= javascript_tag do %>
  var inputElement = document.querySelector("#item_tag_list")
  var tagify = new Tagify(inputElement, {
        whitelist : <%= ActsAsTaggableOn::Tag.for_context(:tags).uniq.pluck(:name).to_json.html_safe %>,
        dropdown : {
            classname     : "color-blue",
            enabled       : 0,              // show the dropdown immediately on focus
            maxItems      : 5,
            position      : "text",         // place the dropdown near the typed text
            closeOnSelect : false,          // keep the dropdown open after selecting a suggestion
            highlightFirst: true
        }
      })
<% end %>
